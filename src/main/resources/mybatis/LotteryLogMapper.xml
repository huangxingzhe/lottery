<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tommy.dao.LotteryLogMapper" >
  <resultMap id="BaseResultMap" type="com.tommy.model.LotteryLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="start_no" property="startNo" jdbcType="INTEGER" />
    <result column="data_name" property="dataName" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="reverse" property="reverse" jdbcType="VARCHAR" />
    <result column="radio" property="radio" jdbcType="INTEGER" />
    <result column="position" property="position" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, start_no, data_name, content, reverse, radio, position
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tommy.model.LotteryLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_lottery_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit == null" >
      <if test="limitStart gt 0 and limitEnd gt 0 " >
        limit ${limitStart} , ${limitEnd}
      </if>
      <if test="limitStart lt 1 and limitEnd lt 0 " >
        limit ${limitEnd}
      </if>
    </if>
    <if test=" limit != null " >
      limit ${limit.start} , ${limit.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_lottery_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_lottery_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tommy.model.LotteryLogExample" >
    delete from t_lottery_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tommy.model.LotteryLog" keyProperty="id" useGeneratedKeys="true" >
    insert into t_lottery_log (id, start_no, data_name, 
      content, reverse, radio, 
      position)
    values (#{id,jdbcType=INTEGER}, #{startNo,jdbcType=INTEGER}, #{dataName,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{reverse,jdbcType=VARCHAR}, #{radio,jdbcType=INTEGER}, 
      #{position,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tommy.model.LotteryLog" keyProperty="id" useGeneratedKeys="true" >
    insert into t_lottery_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="startNo != null" >
        start_no,
      </if>
      <if test="dataName != null" >
        data_name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reverse != null" >
        reverse,
      </if>
      <if test="radio != null" >
        radio,
      </if>
      <if test="position != null" >
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startNo != null" >
        #{startNo,jdbcType=INTEGER},
      </if>
      <if test="dataName != null" >
        #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reverse != null" >
        #{reverse,jdbcType=VARCHAR},
      </if>
      <if test="radio != null" >
        #{radio,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        #{position,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tommy.model.LotteryLogExample" resultType="java.lang.Integer" >
    select count(*) from t_lottery_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_lottery_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.startNo != null" >
        start_no = #{record.startNo,jdbcType=INTEGER},
      </if>
      <if test="record.dataName != null" >
        data_name = #{record.dataName,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.reverse != null" >
        reverse = #{record.reverse,jdbcType=VARCHAR},
      </if>
      <if test="record.radio != null" >
        radio = #{record.radio,jdbcType=INTEGER},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_lottery_log
    set id = #{record.id,jdbcType=INTEGER},
      start_no = #{record.startNo,jdbcType=INTEGER},
      data_name = #{record.dataName,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      reverse = #{record.reverse,jdbcType=VARCHAR},
      radio = #{record.radio,jdbcType=INTEGER},
      position = #{record.position,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tommy.model.LotteryLog" >
    update t_lottery_log
    <set >
      <if test="startNo != null" >
        start_no = #{startNo,jdbcType=INTEGER},
      </if>
      <if test="dataName != null" >
        data_name = #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reverse != null" >
        reverse = #{reverse,jdbcType=VARCHAR},
      </if>
      <if test="radio != null" >
        radio = #{radio,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tommy.model.LotteryLog" >
    update t_lottery_log
    set start_no = #{startNo,jdbcType=INTEGER},
      data_name = #{dataName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      reverse = #{reverse,jdbcType=VARCHAR},
      radio = #{radio,jdbcType=INTEGER},
      position = #{position,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>